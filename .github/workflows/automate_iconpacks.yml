name: Automate Icon Packs and Build APK

on:
  push:
    branches:
      - master

jobs:
  automate-iconpacks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Run automation script
        run: |
          python .github/scripts/automate_iconpacks.py
        continue-on-error: false

      - name: Set Git author identity
        run: |
          git config user.email "crazymahmud08@gmail.com"
          git config user.name "DrDisagree"

      - name: Commit changes to a new branch
        run: |
          git checkout -b ci-build
          git add .
          git commit -m "Automated icon pack updates (#${{github.run_number}})"
          git push --force origin ci-build

  build:
    runs-on: ubuntu-latest
    needs: automate-iconpacks

    steps:
      - name: Checkout the branch with updates
        uses: actions/checkout@v4
        with:
          ref: ci-build

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get application version name
        run: echo "VERSION_NAME=$(${{github.workspace}}/gradlew -q printVersionName)" >> $GITHUB_ENV

      - name: Bump application version code
        uses: chkfung/android-version-actions@v1.2.3
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{github.run_number}}
          versionName: "${{ env.VERSION_NAME }} Dev (#${{github.run_number}})"

      - name: Write sign info
        if: github.repository == 'Mahmud0808/PXIconPack'
        run: |
          if [ ! -z "${{ secrets.KEYSTORE }}" ]; then
            echo storePassword='${{ secrets.KEYSTORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.KEY_ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile='${{ github.workspace }}/key.jks' >> keystore.properties
            echo ${{ secrets.KEYSTORE }} | base64 --decode > ${{ github.workspace }}/key.jks
          fi

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "PXIconPack v${{ env.VERSION_NAME }} (#${{github.run_number}})"
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error
